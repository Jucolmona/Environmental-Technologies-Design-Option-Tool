CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     MODULE NAME: ECM5
C
C     DESCRIPTION: THIS PROGRAM CALCULATES MULTICOMPONENT BREAKTHROUGH FOR
C         FIXED BED ADSORBERS.  THE PROGRAM ASSUMES NO MASS TRANSFER
C         RESISTANCE.  IDEAL ADSORBED SOLUTION THEORY IS USED TO PREDICT
C         COMPETITIVE ADSORPTION.
C
C     PLATFORM: MICROSOFT FORTRAN POWERSTATION V4.0
C
C     HISTORY:
C         1998-SEP-02 - OMAN - CONVERTED DLL FORTRAN CODE FOR USE AS
C                              AN EXE CONNECTED TO THE ADDESIGNS FRONT-END.
C         1998-SEP-20 - OMAN - ADDED OUTPUT OF C0_IO() ARRAY TO ENSURE THAT
C                              RE-ORDERED VALUES OF Co ARE REPORTED BACK TO
C                              THE AdDesignS PROGRAM.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                              *
C234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
C-----789012345678901234567890123456789012345678901234567890123456789012CCCCCCCC-----------------

      PROGRAM ECM5
      IMPLICIT NONE
C
C------ MAXIMUM COMPONENT COUNT.
C
      INTEGER NMAX
      PARAMETER (NMAX = 20)
C
C------ PARAMETERS PASSED TO CALCULATION MODULE.
C
      INTEGER*2 NX
      DOUBLE PRECISION VOID_I, DEN_I, FLRT_I
      INTEGER*2 INDEX_IO(1:NMAX)
      DOUBLE PRECISION XK_I(1:NMAX)
      DOUBLE PRECISION XN_I(1:NMAX)
      DOUBLE PRECISION C0_IO(1:NMAX)
      DOUBLE PRECISION XMW_I(1:NMAX)
      INTEGER*2 NFLAGB
      DOUBLE PRECISION C_O(1:NMAX,1:NMAX)
      DOUBLE PRECISION DGY_O(1:NMAX,1:NMAX)
      DOUBLE PRECISION FCS_O(1:NMAX,1:NMAX)
      DOUBLE PRECISION OATS_O(1:NMAX)
      DOUBLE PRECISION Q_O(1:NMAX,1:NMAX)
      DOUBLE PRECISION QAVE_O(1:NMAX,1:NMAX)
      DOUBLE PRECISION SSTC_O(1:NMAX)
      DOUBLE PRECISION VW_O(1:NMAX)
      DOUBLE PRECISION ZZZ_O(1:NMAX)
C
C------ LOCAL VARIABLES.
C
      CHARACTER*200 FN_IN_MAIN
      CHARACTER*200 FN_OUT_SUCCESSFLAG
      CHARACTER*200 FN_OUT_MAIN
      DOUBLE PRECISION VERSION_CHECK
      DOUBLE PRECISION EOFTESTMARKER
      INTEGER I
      INTEGER J
C
C------ COMMON VARIABLES.
C
      INCLUDE 'COMMON.FI'
C
C------ START OF CODE.
C
C
C------ READ PATH FILE.
C
      OPEN(UNIT=11,FILE='ECM1.IN',STATUS='OLD')
      READ (11,*) FN_IN_MAIN
      READ (11,*) FN_OUT_SUCCESSFLAG
      READ (11,*) FN_OUT_MAIN
	CLOSE(11)
C
C------ READ MAIN INPUT FILE.
C
      OPEN(UNIT=11,FILE=FN_IN_MAIN,STATUS='OLD')
      READ (11,*) VERSION_CHECK
      IF (DABS((VERSION_CHECK+0.000001D0)/
     &    1.00D0-1.00D0).LE.0.001D0) THEN
C
C------ VERSION CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (VERSION CODE).'
        CALL TERMINATE_MODEL
      ENDIF
      READ (11,*) NX
      READ (11,*) VOID_I
      READ (11,*) DEN_I
      READ (11,*) FLRT_I
      DO I=1,NX
        READ (11,*) INDEX_IO(I)
        READ (11,*) XK_I(I)
        READ (11,*) XN_I(I)
        READ (11,*) C0_IO(I)
        READ (11,*) XMW_I(I)
      ENDDO
      READ (11,*) EOFTESTMARKER
c      print *, EOFTESTMARKER
c      print *, DABS((EOFTESTMARKER+0.000001D0)/
c     &    123456.0D0-1.0D0)
      IF (DABS((EOFTESTMARKER+0.000001D0)/
     &    123456.0D0-1.0D0).LE.0.001D0) THEN
C
C------ EOF TEST MARKER CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (EOF MARKER).'
        CALL TERMINATE_MODEL
      ENDIF
      CLOSE(11)
C
C------ CALL THE CALCULATION ROUTINE.
C      
      CALL ECM(NX,VOID_I,DEN_I,FLRT_I,INDEX_IO,XK_I,XN_I,
     &  C0_IO,XMW_I,NFLAGB,C_O,DGY_O,FCS_O,OATS_O,Q_O,
     &  QAVE_O,SSTC_O,VW_O,ZZZ_O)
C
C      print *, 'testing 1'
C      PRINT *, 'Q_O, SOLID PHASE CONCENTRATION, ug/g:'
C      DO I=1,NX
C        DO J=1,NX
C          PRINT *, Q_O(I,J)
C        ENDDO
C      ENDDO
C      print *, 'testing 1z'
C
C
C------ WRITE SUCCESS FLAG OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_SUCCESSFLAG)
      WRITE(12,*) 'NFLAGB, ERROR FLAG FOR ECM MODEL:'
      WRITE(12,*) NFLAGB
      CLOSE(12)
C
C------ WRITE MAIN OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_MAIN)
      WRITE(12,*) 'NX, NUMBER OF COMPONENTS:'
      WRITE(12,*) NX
      WRITE(12,*) 'INDEX_IO, COMPONENT POSITIONS, DIMLESS:'
      DO I=1,NX
        WRITE(12,*) INDEX_IO(I)
      ENDDO
      WRITE(12,*) 'C_O, LIQUID PHASE CONCENTRATION, ug/L:'
      DO I=1,NX
        DO J=1,NX
          WRITE(12,*) C_O(I,J)
        ENDDO
      ENDDO
      WRITE(12,*) 'DGY_O, DIMENSIONLESS GROUP Y, '
     &  // 'USED TO FIND STRONGEST COMPONENT:'
      DO I=1,NX
        DO J=1,NX
          WRITE(12,*) DGY_O(I,J)
        ENDDO
      ENDDO
      WRITE(12,*) 'FCS_O, DIMLESS LIQUID PHASE CONCENTRATION C/COK:'
      DO I=1,NX
        DO J=1,NX
          WRITE(12,*) FCS_O(I,J)
        ENDDO
      ENDDO
      WRITE(12,*) 'OATS_O, ???'
      DO I=1,NX
        WRITE(12,*) OATS_O(I)
      ENDDO
      WRITE(12,*) 'Q_O, SOLID PHASE CONCENTRATION, ug/g:'
      DO I=1,NX
        DO J=1,NX
          WRITE(12,*) Q_O(I,J)
        ENDDO
      ENDDO
      WRITE(12,*) 'QAVE_O, AVERAGE Q IN ZONE:'
      DO I=1,NX
        DO J=1,NX
          WRITE(12,*) QAVE_O(I,J)
        ENDDO
      ENDDO
      WRITE(12,*) 'SSTC_O, SINGLE SOLUTE TREATMENT '
     &  // 'CAPACITY (mg C/L WATER)'
      DO I=1,NX
        WRITE(12,*) SSTC_O(I)
      ENDDO
      WRITE(12,*) 'VW_O, VELOCITY OF WAVE, cm/s:'
      DO I=1,NX
        WRITE(12,*) VW_O(I)
      ENDDO
      WRITE(12,*) 'ZZZ_O, DIMENSIONLESS BED LENGTH:'
      DO I=1,NX
        WRITE(12,*) ZZZ_O(I)
      ENDDO
      WRITE(12,*) 'C0_IO, RE-ORDERED INFLUENT CONCENTRATIONS, ug/L'
      DO I=1,NX
        WRITE(12,*) C0_IO(I)
      ENDDO
      WRITE(12,*) 'EOFTESTMARKER:'
      WRITE(12,*) 123456.0D0
      CLOSE(12)
      END


      SUBROUTINE TERMINATE_MODEL
      IMPLICIT NONE
CC------ COMMON VARIABLES.
C      INCLUDE 'COMMON.FI'
      PAUSE 'Press Enter to terminate model.'
      STOP
      RETURN
	END

