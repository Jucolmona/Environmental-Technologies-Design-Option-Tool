//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("1.0.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("01/09/2020 11:25:00")]

namespace AxVCIF1Lib {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{042badc5-5e58-11ce-b610-524153480001}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("ClickEvent")]
    public class AxF1Book : System.Windows.Forms.AxHost {
        
        private VCIF1Lib._DVCF1 ocx;
        
        private AxF1BookEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxF1Book() : 
                base("042badc5-5e58-11ce-b610-524153480001") {
            this.SetAboutBoxDelegate(new AboutBoxDelegate(AboutBox));
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(3)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CtlBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.BackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BackColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(4)]
        public virtual int Col {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Col", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Col;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Col", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Col = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(5)]
        public virtual int Row {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Row;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Row = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(6)]
        public virtual short ShowHScrollBar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowHScrollBar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowHScrollBar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowHScrollBar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowHScrollBar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(7)]
        public virtual string CtlText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Text;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Text = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(8)]
        public virtual double Number {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Number", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Number;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Number", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Number = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(9)]
        public virtual string Formula {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Formula", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Formula;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Formula", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Formula = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(10)]
        public virtual int FixedCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixedCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixedCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(11)]
        public virtual int FixedCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixedCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixedCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(12)]
        public virtual int FixedRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixedRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixedRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(13)]
        public virtual int FixedRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixedRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixedRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(14)]
        public virtual bool ShowGridLines {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowGridLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowGridLines;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowGridLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowGridLines = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(15)]
        public virtual bool ShowRowHeading {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowRowHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowRowHeading;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowRowHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowRowHeading = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(16)]
        public virtual short ShowSelections {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowSelections", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowSelections;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowSelections", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowSelections = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(17)]
        public virtual int LeftCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LeftCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LeftCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(18)]
        public virtual int MaxCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(19)]
        public virtual int MaxRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(20)]
        public virtual int TopRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TopRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TopRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(21)]
        public virtual bool AllowResize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowResize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowResize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowResize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowResize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(22)]
        public virtual bool AllowSelections {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowSelections", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowSelections;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowSelections", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowSelections = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(23)]
        public virtual bool AllowFormulas {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowFormulas", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowFormulas;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowFormulas", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowFormulas = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(24)]
        public virtual bool AllowInCellEditing {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowInCellEditing", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowInCellEditing;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowInCellEditing", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowInCellEditing = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(25)]
        public virtual short ShowVScrollBar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowVScrollBar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowVScrollBar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowVScrollBar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowVScrollBar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(26)]
        public virtual bool AllowFillRange {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowFillRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowFillRange;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowFillRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowFillRange = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(27)]
        public virtual bool AllowMoveRange {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowMoveRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowMoveRange;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowMoveRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowMoveRange = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(28)]
        public virtual int SelStartCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStartCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelStartCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStartCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelStartCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(29)]
        public virtual int SelStartRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStartRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelStartRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStartRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelStartRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(30)]
        public virtual int SelEndCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelEndCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelEndCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelEndCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelEndCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(31)]
        public virtual int SelEndRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelEndRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelEndRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelEndRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelEndRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(32)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color ExtraColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExtraColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.ExtraColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExtraColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ExtraColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(33)]
        public virtual string FileName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FileName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FileName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FileName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FileName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(34)]
        public virtual bool AutoRecalc {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoRecalc;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoRecalc = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(35)]
        public virtual bool PrintGridLines {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintGridLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintGridLines;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintGridLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintGridLines = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(36)]
        public virtual bool PrintRowHeading {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintRowHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintRowHeading;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintRowHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintRowHeading = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(37)]
        public virtual bool PrintHCenter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintHCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintHCenter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintHCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintHCenter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(38)]
        public virtual bool PrintVCenter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintVCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintVCenter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintVCenter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintVCenter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(39)]
        public virtual bool PrintLeftToRight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintLeftToRight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintLeftToRight;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintLeftToRight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintLeftToRight = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(40)]
        public virtual string PrintHeader {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintHeader", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintHeader;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintHeader", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintHeader = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(41)]
        public virtual string PrintFooter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintFooter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintFooter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintFooter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintFooter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(42)]
        public virtual double PrintLeftMargin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintLeftMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintLeftMargin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintLeftMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintLeftMargin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(43)]
        public virtual double PrintTopMargin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintTopMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintTopMargin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintTopMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintTopMargin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(44)]
        public virtual double PrintRightMargin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintRightMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintRightMargin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintRightMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintRightMargin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(45)]
        public virtual double PrintBottomMargin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBottomMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintBottomMargin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintBottomMargin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintBottomMargin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(46)]
        public virtual string PrintArea {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintArea", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintArea;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintArea", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintArea = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(47)]
        public virtual string PrintTitles {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintTitles", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintTitles;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintTitles", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintTitles = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(48)]
        public virtual bool PrintNoColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintNoColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintNoColor;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintNoColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintNoColor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(49)]
        public virtual string Selection {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Selection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Selection;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Selection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Selection = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(50)]
        public virtual string TableName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TableName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TableName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TableName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TableName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(51)]
        public virtual bool DoCancelEdit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoCancelEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoCancelEdit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoCancelEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoCancelEdit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(52)]
        public virtual bool DoSelChange {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoSelChange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoSelChange;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoSelChange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoSelChange = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(53)]
        public virtual bool DoStartEdit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoStartEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoStartEdit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoStartEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoStartEdit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(54)]
        public virtual bool DoEndEdit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoEndEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoEndEdit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoEndEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoEndEdit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(55)]
        public virtual bool DoStartRecalc {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoStartRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoStartRecalc;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoStartRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoStartRecalc = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(56)]
        public virtual bool DoEndRecalc {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoEndRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoEndRecalc;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoEndRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoEndRecalc = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(57)]
        public virtual bool DoClick {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoClick;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoClick = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(58)]
        public virtual bool DoDblClick {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoDblClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoDblClick;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoDblClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoDblClick = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(59)]
        public virtual bool ShowColHeading {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowColHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowColHeading;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowColHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowColHeading = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(60)]
        public virtual bool PrintColHeading {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintColHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintColHeading;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintColHeading", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintColHeading = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(61)]
        public virtual string Entry {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Entry", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Entry;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Entry", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Entry = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(62)]
        public virtual bool Repaint {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Repaint", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Repaint;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Repaint", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Repaint = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(63)]
        public virtual bool AllowArrows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowArrows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowArrows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowArrows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowArrows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(64)]
        public virtual bool AllowTabs {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowTabs", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowTabs;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowTabs", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowTabs = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(65)]
        public virtual string FormattedText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormattedText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FormattedText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormattedText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FormattedText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(66)]
        public virtual bool RowMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RowMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(67)]
        public virtual bool AllowDelete {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowDelete", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowDelete;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowDelete", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowDelete = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(68)]
        public virtual bool EnableProtection {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnableProtection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EnableProtection;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnableProtection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EnableProtection = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(69)]
        public virtual int MinCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MinCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MinCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MinCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MinCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(70)]
        public virtual int MinRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MinRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MinRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MinRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MinRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(71)]
        public virtual bool DoTopLeftChanged {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoTopLeftChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoTopLeftChanged;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoTopLeftChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoTopLeftChanged = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(72)]
        public virtual bool AllowEditHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowEditHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowEditHeaders;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowEditHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowEditHeaders = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(73)]
        public virtual bool DoObjClick {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoObjClick;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoObjClick = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(74)]
        public virtual bool DoObjDblClick {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjDblClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoObjDblClick;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjDblClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoObjDblClick = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(75)]
        public virtual bool AllowObjSelections {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowObjSelections", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowObjSelections;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowObjSelections", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowObjSelections = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(76)]
        public virtual bool DoRClick {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoRClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoRClick;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoRClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoRClick = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(77)]
        public virtual bool DoRDblClick {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoRDblClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoRDblClick;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoRDblClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoRDblClick = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(78)]
        public virtual string Clip {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clip", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Clip;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clip", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Clip = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(79)]
        public virtual string ClipValues {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipValues", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ClipValues;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClipValues", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ClipValues = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(80)]
        public virtual bool PrintLandscape {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintLandscape", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PrintLandscape;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintLandscape", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintLandscape = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-514)]
        public override bool Enabled {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return this.ocx.Enabled;
                }
                else {
                    return base.Enabled;
                }
            }
            set {
                base.Enabled = value;
                if ((this.ocx != null)) {
                    this.ocx.Enabled = value;
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-504)]
        public virtual short BorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(81)]
        public virtual string AppName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AppName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AppName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AppName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AppName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(82)]
        public virtual short HdrHeight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HdrHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HdrHeight;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HdrHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HdrHeight = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(83)]
        public virtual short HdrWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HdrWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HdrWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HdrWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HdrWidth = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(84)]
        public virtual string NumberFormat {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NumberFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.NumberFormat;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NumberFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.NumberFormat = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(85)]
        public virtual string TopLeftText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopLeftText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TopLeftText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopLeftText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TopLeftText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(86)]
        public virtual bool EnterMovesDown {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnterMovesDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EnterMovesDown;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnterMovesDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EnterMovesDown = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(87)]
        public virtual int LastCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LastCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LastCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LastCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LastCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(88)]
        public virtual int LastRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LastRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LastRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LastRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LastRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(89)]
        public virtual bool Logical {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Logical", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Logical;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Logical", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Logical = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(90)]
        public virtual short Mode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Mode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Mode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(91)]
        public virtual short PolyEditMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PolyEditMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PolyEditMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PolyEditMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PolyEditMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(92)]
        public virtual short ViewScale {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ViewScale", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ViewScale;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ViewScale", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ViewScale = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(93)]
        public virtual short SelectionCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectionCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectionCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectionCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelectionCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(94)]
        public virtual string Title {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Title", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Title;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Title", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Title = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(95)]
        public virtual short Type {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Type", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Type;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Type", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Type = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(96)]
        public virtual bool ShowFormulas {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowFormulas", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowFormulas;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowFormulas", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowFormulas = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(97)]
        public virtual bool ShowZeroValues {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowZeroValues", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowZeroValues;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowZeroValues", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowZeroValues = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(2)]
        public virtual short MousePointer {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MousePointer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MousePointer;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MousePointer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MousePointer = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(98)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("StdType.IPictureDisp")]
        public virtual System.Drawing.Image MouseIcon {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MouseIcon", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.MouseIcon);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MouseIcon", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MouseIcon = ((StdType.IPictureDisp)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(99)]
        public virtual bool DoObjValueChanged {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjValueChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoObjValueChanged;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjValueChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoObjValueChanged = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(100)]
        public virtual bool ScrollToLastRC {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollToLastRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollToLastRC;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollToLastRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollToLastRC = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(101)]
        public virtual bool Modified {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Modified", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Modified;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Modified", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Modified = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(102)]
        public virtual bool DoObjGotFocus {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjGotFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoObjGotFocus;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjGotFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoObjGotFocus = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(103)]
        public virtual bool DoObjLostFocus {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjLostFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DoObjLostFocus;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoObjLostFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DoObjLostFocus = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(104)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.Int32")]
        public virtual int PrintDevMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintDevMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return (this.ocx.PrintDevMode);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintDevMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PrintDevMode = ((int)((value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(105)]
        public virtual int NumSheets {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NumSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.NumSheets;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NumSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.NumSheets = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(106)]
        public virtual int Sheet {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Sheet;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sheet", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Sheet = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(107)]
        public virtual short ColWidthUnits {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColWidthUnits", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColWidthUnits;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColWidthUnits", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColWidthUnits = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(108)]
        public virtual bool ShowTypeMarkers {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTypeMarkers", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowTypeMarkers;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTypeMarkers", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowTypeMarkers = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(109)]
        public virtual short ShowTabs {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTabs", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowTabs;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTabs", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowTabs = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(110)]
        public virtual bool ShowEditBar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowEditBar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowEditBar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowEditBar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowEditBar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(111)]
        public virtual bool ShowEditBarCellRef {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowEditBarCellRef", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowEditBarCellRef;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowEditBarCellRef", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowEditBarCellRef = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1)]
        public virtual bool AllowDesigner {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowDesigner", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowDesigner;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowDesigner", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowDesigner = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-515)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.Int32")]
        public virtual int hWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return (this.ocx.hWnd);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.hWnd = ((int)((value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(112)]
        public virtual bool AllowAutoFill {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowAutoFill", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowAutoFill;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowAutoFill", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowAutoFill = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(299)]
        public virtual bool Compressed {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Compressed", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Compressed;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Compressed", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Compressed = value;
            }
        }
        
        public event _DVCF1Events_ClickEventHandler ClickEvent;
        
        public event _DVCF1Events_DblClickEventHandler DblClick;
        
        public event System.EventHandler CancelEditEvent;
        
        public event System.EventHandler SelChange;
        
        public event _DVCF1Events_StartEditEventHandler StartEditEvent;
        
        public event _DVCF1Events_EndEditEventHandler EndEditEvent;
        
        public event System.EventHandler StartRecalc;
        
        public event System.EventHandler EndRecalc;
        
        public event System.EventHandler TopLeftChanged;
        
        public event _DVCF1Events_ObjClickEventHandler ObjClick;
        
        public event _DVCF1Events_ObjDblClickEventHandler ObjDblClick;
        
        public event _DVCF1Events_RClickEventHandler RClick;
        
        public event _DVCF1Events_RDblClickEventHandler RDblClick;
        
        public event _DVCF1Events_ObjValueChangedEventHandler ObjValueChanged;
        
        public event System.EventHandler ModifiedEvent;
        
        public event _DVCF1Events_MouseDownEventHandler MouseDownEvent;
        
        public event _DVCF1Events_MouseUpEventHandler MouseUpEvent;
        
        public event _DVCF1Events_MouseMoveEventHandler MouseMoveEvent;
        
        public event _DVCF1Events_ObjGotFocusEventHandler ObjGotFocus;
        
        public event _DVCF1Events_ObjLostFocusEventHandler ObjLostFocus;
        
        public event _DVCF1Events_ValidationFailedEventHandler ValidationFailed;
        
        public event _DVCF1Events_KeyPressEventHandler KeyPressEvent;
        
        public event _DVCF1Events_KeyDownEventHandler KeyDownEvent;
        
        public event _DVCF1Events_KeyUpEventHandler KeyUpEvent;
        
        public virtual int ObjNameToID(string name) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjNameToID", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ObjNameToID(name)));
            return returnValue;
        }
        
        public virtual int DefinedNameCount() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DefinedNameCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.DefinedNameCount()));
            return returnValue;
        }
        
        public virtual string get_AutoFillItems(short index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_AutoFillItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_AutoFillItems(index)));
            return returnValue;
        }
        
        public virtual void set_AutoFillItems(short index, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_AutoFillItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_AutoFillItems(index, param0);
        }
        
        public virtual void ValidationRuleDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ValidationRuleDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ValidationRuleDlg();
        }
        
        public virtual void SetValidationRule(string rule, string text) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetValidationRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetValidationRule(rule, text);
        }
        
        public virtual void GetValidationRule(ref string rule, ref string text) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetValidationRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetValidationRule(ref rule, ref text);
        }
        
        public virtual short AutoFillItemsCount() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoFillItemsCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.AutoFillItemsCount()));
            return returnValue;
        }
        
        public virtual void CopyRangeEx(int nDstSheet, int nDstR1, int nDstC1, int nDstR2, int nDstC2, int hSrcSS, int nSrcSheet, int nSrcR1, int nSrcC1, int nSrcR2, int nSrcC2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyRangeEx", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyRangeEx(nDstSheet, nDstR1, nDstC1, nDstR2, nDstC2, hSrcSS, nSrcSheet, nSrcR1, nSrcC1, nSrcR2, nSrcC2);
        }
        
        public virtual void Sort(int nR1, int nC1, int nR2, int nC2, bool bSortByRows, object keys) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sort", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Sort(nR1, nC1, nR2, nC2, bSortByRows, keys);
        }
        
        public virtual bool get_ColHidden(int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_ColHidden(nCol)));
            return returnValue;
        }
        
        public virtual void set_ColHidden(int nCol, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColHidden(nCol, param0);
        }
        
        public virtual bool get_RowHidden(int nRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_RowHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_RowHidden(nRow)));
            return returnValue;
        }
        
        public virtual void set_RowHidden(int nRow, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_RowHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_RowHidden(nRow, param0);
        }
        
        public virtual void DeleteAutoFillItems(short nIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteAutoFillItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DeleteAutoFillItems(nIndex);
        }
        
        public virtual void ODBCConnect(ref string pConnect, bool bShowErrors, ref short pRetCode) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ODBCConnect", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ODBCConnect(ref pConnect, bShowErrors, ref pRetCode);
        }
        
        public virtual void ODBCDisconnect() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ODBCDisconnect", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ODBCDisconnect();
        }
        
        public virtual void ODBCQuery(ref string pQuery, int nRow, int nCol, bool bForceShowDlg, ref bool pSetColNames, ref bool pSetColFormats, ref bool pSetColWidths, ref bool pSetMaxRC, ref short pRetCode) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ODBCQuery", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ODBCQuery(ref pQuery, nRow, nCol, bForceShowDlg, ref pSetColNames, ref pSetColFormats, ref pSetColWidths, ref pSetMaxRC, ref pRetCode);
        }
        
        public virtual bool get_SheetSelected(int nSheet) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SheetSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_SheetSelected(nSheet)));
            return returnValue;
        }
        
        public virtual void set_SheetSelected(int nSheet, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SheetSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SheetSelected(nSheet, param0);
        }
        
        public virtual void LaunchDesigner() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LaunchDesigner", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.LaunchDesigner();
        }
        
        public virtual void AboutBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AboutBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AboutBox();
        }
        
        public virtual void ObjSetCell(int iD, short controlCellType, int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjSetCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjSetCell(iD, controlCellType, nRow, nCol);
        }
        
        public virtual void ObjSetPicture(int iD, int hMF, short nMapMode, int nWndExtentX, int nWndExtentY) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjSetPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjSetPicture(iD, hMF, nMapMode, nWndExtentX, nWndExtentY);
        }
        
        public virtual void ObjSetPos(int iD, float nX1, float nY1, float nX2, float nY2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjSetPos", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjSetPos(iD, nX1, nY1, nX2, nY2);
        }
        
        public virtual void ObjSetSelection(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjSetSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjSetSelection(iD);
        }
        
        public virtual void OpenFileDlg(string pTitle, int hWndParent, ref string pBuf) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OpenFileDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.OpenFileDlg(pTitle, hWndParent, ref pBuf);
        }
        
        public virtual void ProtectionDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ProtectionDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ProtectionDlg();
        }
        
        public virtual void RangeToTwips(int nRow1, int nCol1, int nRow2, int nCol2, ref int pX, ref int pY, ref int pCX, ref int pCY, ref short pShown) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RangeToTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RangeToTwips(nRow1, nCol1, nRow2, nCol2, ref pX, ref pY, ref pCX, ref pCY, ref pShown);
        }
        
        public virtual void Read(string pPathName, ref short pFileType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Read", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Read(pPathName, ref pFileType);
        }
        
        public virtual void ReadFromBlob(int hBlob, short nReservedBytes) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReadFromBlob", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ReadFromBlob(hBlob, nReservedBytes);
        }
        
        public virtual void Recalc() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Recalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Recalc();
        }
        
        public virtual void RemoveColPageBreak(int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveColPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveColPageBreak(nCol);
        }
        
        public virtual void RemovePageBreak() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemovePageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemovePageBreak();
        }
        
        public virtual void RemoveRowPageBreak(int nRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveRowPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveRowPageBreak(nRow);
        }
        
        public virtual void RowHeightDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowHeightDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RowHeightDlg();
        }
        
        public virtual void SaveFileDlg(string pTitle, ref string pBuf, ref short pFileType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveFileDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SaveFileDlg(pTitle, ref pBuf, ref pFileType);
        }
        
        public virtual void SaveWindowInfo() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveWindowInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SaveWindowInfo();
        }
        
        public virtual void SetActiveCell(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetActiveCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetActiveCell(nRow, nCol);
        }
        
        public virtual void SetAlignment(short hAlign, bool bWordWrap, short vAlign, short nOrientation) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetAlignment", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetAlignment(hAlign, bWordWrap, vAlign, nOrientation);
        }
        
        public virtual void SetBorder(short nOutline, short nLeft, short nRight, short nTop, short nBottom, short nShade, uint crOutline, uint crLeft, uint crRight, uint crTop, uint crBottom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetBorder(nOutline, nLeft, nRight, nTop, nBottom, nShade, crOutline, crLeft, crRight, crTop, crBottom);
        }
        
        public virtual void SetColWidth(int nC1, int nC2, short nWidth, bool bDefColWidth) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetColWidth(nC1, nC2, nWidth, bDefColWidth);
        }
        
        public virtual void SetColWidthAuto(int nR1, int nC1, int nR2, int nC2, bool bSetDefaults) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColWidthAuto", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetColWidthAuto(nR1, nC1, nR2, nC2, bSetDefaults);
        }
        
        public virtual void SetDefaultFont(string pName, short nSize) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetDefaultFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetDefaultFont(pName, nSize);
        }
        
        public virtual void SetFont(string pName, short nSize, bool bBold, bool bItalic, bool bUnderline, bool bStrikeout, uint crColor, bool bOutline, bool bShadow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFont(pName, nSize, bBold, bItalic, bUnderline, bStrikeout, crColor, bOutline, bShadow);
        }
        
        public virtual void SetHdrSelection(bool bTopLeftHdr, bool bRowHdr, bool bColHdr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetHdrSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetHdrSelection(bTopLeftHdr, bRowHdr, bColHdr);
        }
        
        public virtual void SetIteration(bool bIteration, short nMaxIterations, double nMaxChange) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetIteration", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetIteration(bIteration, nMaxIterations, nMaxChange);
        }
        
        public virtual void SetLineStyle(short nStyle, uint crColor, short nWeight) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetLineStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetLineStyle(nStyle, crColor, nWeight);
        }
        
        public virtual void SetPattern(short nPattern, uint crFG, uint crBG) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetPattern", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetPattern(nPattern, crFG, crBG);
        }
        
        public virtual void SetPrintAreaFromSelection() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetPrintAreaFromSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetPrintAreaFromSelection();
        }
        
        public virtual void SetPrintScale(short nScale, bool bFitToPage, short nVPages, short nHPages) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetPrintScale", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetPrintScale(nScale, bFitToPage, nVPages, nHPages);
        }
        
        public virtual void SetPrintTitlesFromSelection() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetPrintTitlesFromSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetPrintTitlesFromSelection();
        }
        
        public virtual void SetProtection(bool bLocked, bool bHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetProtection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetProtection(bLocked, bHidden);
        }
        
        public virtual void SetRowHeight(int nR1, int nR2, short nHeight, bool bDefRowHeight) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRowHeight(nR1, nR2, nHeight, bDefRowHeight);
        }
        
        public virtual void SetRowHeightAuto(int nR1, int nC1, int nR2, int nC2, bool bSetDefaults) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRowHeightAuto", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRowHeightAuto(nR1, nC1, nR2, nC2, bSetDefaults);
        }
        
        public virtual void SetSelection(int nR1, int nC1, int nR2, int nC2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetSelection(nR1, nC1, nR2, nC2);
        }
        
        public virtual void ShowActiveCell() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowActiveCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowActiveCell();
        }
        
        public virtual void Sort3(int nR1, int nC1, int nR2, int nC2, bool bSortByRows, int nKey1, int nKey2, int nKey3) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sort3", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Sort3(nR1, nC1, nR2, nC2, bSortByRows, nKey1, nKey2, nKey3);
        }
        
        public virtual void SortDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SortDlg();
        }
        
        public virtual void StartEdit(bool bClear, bool bInCellEditFocus, bool bArrowsExitEditMode) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.StartEdit(bClear, bInCellEditFocus, bArrowsExitEditMode);
        }
        
        public virtual void SwapTables(int hSS2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SwapTables", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SwapTables(hSS2);
        }
        
        public virtual void TransactCommit() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TransactCommit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TransactCommit();
        }
        
        public virtual void TransactRollback() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TransactRollback", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TransactRollback();
        }
        
        public virtual void TransactStart() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TransactStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TransactStart();
        }
        
        public virtual void TwipsToRC(int x, int y, ref int pRow, ref int pCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TwipsToRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.TwipsToRC(x, y, ref pRow, ref pCol);
        }
        
        public virtual void SSUpdate() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SSUpdate", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SSUpdate();
        }
        
        public virtual short SSVersion() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SSVersion", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.SSVersion()));
            return returnValue;
        }
        
        public virtual void Write(string pPathName, short fileType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Write", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Write(pPathName, fileType);
        }
        
        public virtual void WriteToBlob(ref int phBlob, short nReservedBytes) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WriteToBlob", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.WriteToBlob(ref phBlob, nReservedBytes);
        }
        
        public virtual void SetRowHidden(int nRow1, int nRow2, bool bHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRowHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRowHidden(nRow1, nRow2, bHidden);
        }
        
        public virtual void SetColHidden(int nCol1, int nCol2, bool bHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetColHidden(nCol1, nCol2, bHidden);
        }
        
        public virtual void SetColWidthTwips(int nCol1, int nCol2, int nWidth, bool bDefColWidth) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColWidthTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetColWidthTwips(nCol1, nCol2, nWidth, bDefColWidth);
        }
        
        public virtual string get_DefinedNameByIndex(int nName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DefinedNameByIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_DefinedNameByIndex(nName)));
            return returnValue;
        }
        
        public virtual void set_DefinedNameByIndex(int nName, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DefinedNameByIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DefinedNameByIndex(nName, param0);
        }
        
        public virtual string get_SheetName(int nSheet) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SheetName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_SheetName(nSheet)));
            return returnValue;
        }
        
        public virtual void set_SheetName(int nSheet, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SheetName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SheetName(nSheet, param0);
        }
        
        public virtual System.Drawing.Color get_PaletteEntry(int nEntry) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_PaletteEntry", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            uint returnValue = ((uint)(this.ocx.get_PaletteEntry(nEntry)));
            return GetColorFromOleColor(returnValue);
        }
        
        public virtual void set_PaletteEntry(int nEntry, uint param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_PaletteEntry", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_PaletteEntry(nEntry, param0);
        }
        
        public virtual void EditInsertSheets() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditInsertSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditInsertSheets();
        }
        
        public virtual void EditDeleteSheets() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditDeleteSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditDeleteSheets();
        }
        
        public virtual void InsertSheets(int nSheet, int nSheets) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InsertSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.InsertSheets(nSheet, nSheets);
        }
        
        public virtual void DeleteSheets(int nSheet, int nSheets) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteSheets", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DeleteSheets(nSheet, nSheets);
        }
        
        public virtual void Refresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Refresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Refresh();
        }
        
        public virtual short get_ColWidthTwips(int col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColWidthTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.get_ColWidthTwips(col)));
            return returnValue;
        }
        
        public virtual void set_ColWidthTwips(int col, short param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColWidthTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColWidthTwips(col, param0);
        }
        
        public virtual int NextColPageBreak(int col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NextColPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.NextColPageBreak(col)));
            return returnValue;
        }
        
        public virtual int NextRowPageBreak(int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NextRowPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.NextRowPageBreak(row)));
            return returnValue;
        }
        
        public virtual int ObjFirstID() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjFirstID", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ObjFirstID()));
            return returnValue;
        }
        
        public virtual int ObjNextID(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjNextID", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ObjNextID(iD)));
            return returnValue;
        }
        
        public virtual short ObjGetItemCount(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjGetItemCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.ObjGetItemCount(iD)));
            return returnValue;
        }
        
        public virtual short ObjGetType(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjGetType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.ObjGetType(iD)));
            return returnValue;
        }
        
        public virtual short ObjGetSelectionCount() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjGetSelectionCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.ObjGetSelectionCount()));
            return returnValue;
        }
        
        public virtual string FormatRCNr(int row, int col, bool doAbsolute) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatRCNr", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.FormatRCNr(row, col, doAbsolute)));
            return returnValue;
        }
        
        public virtual int SS() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SS", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.SS()));
            return returnValue;
        }
        
        public virtual string ErrorNumberToText(int sSError) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ErrorNumberToText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ErrorNumberToText(sSError)));
            return returnValue;
        }
        
        public virtual string get_ObjItem(int iD, short item) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ObjItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ObjItem(iD, item)));
            return returnValue;
        }
        
        public virtual void set_ObjItem(int iD, short item, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ObjItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ObjItem(iD, item, param0);
        }
        
        public virtual string get_ObjItems(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ObjItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ObjItems(iD)));
            return returnValue;
        }
        
        public virtual void set_ObjItems(int iD, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ObjItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ObjItems(iD, param0);
        }
        
        public virtual string get_ObjName(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ObjName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ObjName(iD)));
            return returnValue;
        }
        
        public virtual void set_ObjName(int iD, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ObjName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ObjName(iD, param0);
        }
        
        public virtual string get_ObjText(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ObjText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ObjText(iD)));
            return returnValue;
        }
        
        public virtual void set_ObjText(int iD, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ObjText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ObjText(iD, param0);
        }
        
        public virtual short get_ObjValue(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ObjValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.get_ObjValue(iD)));
            return returnValue;
        }
        
        public virtual void set_ObjValue(int iD, short param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ObjValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ObjValue(iD, param0);
        }
        
        public virtual bool get_ObjVisible(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ObjVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_ObjVisible(iD)));
            return returnValue;
        }
        
        public virtual void set_ObjVisible(int iD, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ObjVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ObjVisible(iD, param0);
        }
        
        public virtual void GetAlignment(ref short pHorizontal, ref bool pWordWrap, ref short pVertical, ref short pOrientation) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetAlignment", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetAlignment(ref pHorizontal, ref pWordWrap, ref pVertical, ref pOrientation);
        }
        
        public virtual void GetBorder(ref short pLeft, ref short pRight, ref short pTop, ref short pBottom, ref short pShade, ref uint pcrLeft, ref uint pcrRight, ref uint pcrTop, ref uint pcrBottom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetBorder(ref pLeft, ref pRight, ref pTop, ref pBottom, ref pShade, ref pcrLeft, ref pcrRight, ref pcrTop, ref pcrBottom);
        }
        
        public virtual void GetFont(ref string pName, ref short pSize, ref bool pBold, ref bool pItalic, ref bool pUnderline, ref bool pStrikeout, ref uint pcrColor, ref bool pOutline, ref bool pShadow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetFont(ref pName, ref pSize, ref pBold, ref pItalic, ref pUnderline, ref pStrikeout, ref pcrColor, ref pOutline, ref pShadow);
        }
        
        public virtual void GetLineStyle(ref short pStyle, ref uint pcrColor, ref short pWeight) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetLineStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetLineStyle(ref pStyle, ref pcrColor, ref pWeight);
        }
        
        public virtual void GetPattern(ref short pPattern, ref uint pcrFG, ref uint pcrBG) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetPattern", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetPattern(ref pPattern, ref pcrFG, ref pcrBG);
        }
        
        public virtual void GetProtection(ref bool pLocked, ref bool pHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetProtection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetProtection(ref pLocked, ref pHidden);
        }
        
        public virtual void GetTabbedText(int nR1, int nC1, int nR2, int nC2, bool bValuesOnly, ref int phText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetTabbedText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetTabbedText(nR1, nC1, nR2, nC2, bValuesOnly, ref phText);
        }
        
        public virtual void SetTabbedText(int nStartRow, int nStartCol, ref int pRows, ref int pCols, bool bValuesOnly, string pText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetTabbedText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetTabbedText(nStartRow, nStartCol, ref pRows, ref pCols, bValuesOnly, pText);
        }
        
        public virtual void AddColPageBreak(int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddColPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddColPageBreak(nCol);
        }
        
        public virtual void AddPageBreak() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddPageBreak();
        }
        
        public virtual void AddRowPageBreak(int nRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddRowPageBreak", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddRowPageBreak(nRow);
        }
        
        public virtual void AddSelection(int nR1, int nC1, int nR2, int nC2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddSelection(nR1, nC1, nR2, nC2);
        }
        
        public virtual void Attach(string pTitle) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Attach", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Attach(pTitle);
        }
        
        public virtual void AttachToSS(int hSrcSS) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AttachToSS", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AttachToSS(hSrcSS);
        }
        
        public virtual void CalculationDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalculationDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CalculationDlg();
        }
        
        public virtual void CancelEdit() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CancelEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CancelEdit();
        }
        
        public virtual void CheckRecalc() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CheckRecalc", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CheckRecalc();
        }
        
        public virtual void ClearClipboard() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearClipboard", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClearClipboard();
        }
        
        public virtual void ClearRange(int nR1, int nC1, int nR2, int nC2, short clearType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClearRange(nR1, nC1, nR2, nC2, clearType);
        }
        
        public virtual void ColorPaletteDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColorPaletteDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ColorPaletteDlg();
        }
        
        public virtual void ColWidthDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColWidthDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ColWidthDlg();
        }
        
        public virtual void CopyAll(int hSrcSS) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyAll(hSrcSS);
        }
        
        public virtual void CopyRange(int nDstR1, int nDstC1, int nDstR2, int nDstC2, int hSrcSS, int nSrcR1, int nSrcC1, int nSrcR2, int nSrcC2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyRange(nDstR1, nDstC1, nDstR2, nDstC2, hSrcSS, nSrcR1, nSrcC1, nSrcR2, nSrcC2);
        }
        
        public virtual void DefinedNameDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DefinedNameDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DefinedNameDlg();
        }
        
        public virtual void DeleteDefinedName(string pName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteDefinedName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DeleteDefinedName(pName);
        }
        
        public virtual void DeleteRange(int nR1, int nC1, int nR2, int nC2, short shiftType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DeleteRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DeleteRange(nR1, nC1, nR2, nC2, shiftType);
        }
        
        public virtual void Draw(int hDC, int x, int y, int cx, int cy, int nRow, int nCol, ref int pRows, ref int pCols, int nFixedRow, int nFixedCol, int nFixedRows, int nFixedCols) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Draw", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Draw(hDC, x, y, cx, cy, nRow, nCol, ref pRows, ref pCols, nFixedRow, nFixedCol, nFixedRows, nFixedCols);
        }
        
        public virtual void EditClear(short clearType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditClear", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditClear(clearType);
        }
        
        public virtual void EditCopy() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditCopy", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditCopy();
        }
        
        public virtual void EditCopyDown() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditCopyDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditCopyDown();
        }
        
        public virtual void EditCopyRight() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditCopyRight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditCopyRight();
        }
        
        public virtual void EditCut() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditCut", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditCut();
        }
        
        public virtual void EditDelete(short shiftType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditDelete", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditDelete(shiftType);
        }
        
        public virtual void EditInsert(short shiftType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditInsert", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditInsert(shiftType);
        }
        
        public virtual void EditPaste() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditPaste", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditPaste();
        }
        
        public virtual void EndEdit() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EndEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EndEdit();
        }
        
        public virtual void FilePageSetupDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilePageSetupDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FilePageSetupDlg();
        }
        
        public virtual void FilePrint(bool bShowPrintDlg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilePrint", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FilePrint(bShowPrintDlg);
        }
        
        public virtual void FilePrintSetupDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilePrintSetupDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FilePrintSetupDlg();
        }
        
        public virtual void FormatAlignmentDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatAlignmentDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatAlignmentDlg();
        }
        
        public virtual void FormatBorderDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatBorderDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatBorderDlg();
        }
        
        public virtual void FormatCurrency0() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatCurrency0", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatCurrency0();
        }
        
        public virtual void FormatCurrency2() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatCurrency2", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatCurrency2();
        }
        
        public virtual void FormatDefaultFontDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatDefaultFontDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatDefaultFontDlg();
        }
        
        public virtual void FormatFixed() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatFixed", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatFixed();
        }
        
        public virtual void FormatFixed2() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatFixed2", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatFixed2();
        }
        
        public virtual void FormatFontDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatFontDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatFontDlg();
        }
        
        public virtual void FormatFraction() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatFraction", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatFraction();
        }
        
        public virtual void FormatGeneral() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatGeneral", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatGeneral();
        }
        
        public virtual void FormatHmmampm() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatHmmampm", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatHmmampm();
        }
        
        public virtual void FormatMdyy() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatMdyy", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatMdyy();
        }
        
        public virtual void FormatNumberDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatNumberDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatNumberDlg();
        }
        
        public virtual void FormatPatternDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatPatternDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatPatternDlg();
        }
        
        public virtual void FormatPercent() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatPercent", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatPercent();
        }
        
        public virtual void FormatScientific() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormatScientific", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FormatScientific();
        }
        
        public virtual void GetActiveCell(ref int pRow, ref int pCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetActiveCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetActiveCell(ref pRow, ref pCol);
        }
        
        public virtual short get_ColWidth(int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.get_ColWidth(nCol)));
            return returnValue;
        }
        
        public virtual void set_ColWidth(int nCol, short param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColWidth(nCol, param0);
        }
        
        public virtual short get_RowHeight(int nRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_RowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.get_RowHeight(nRow)));
            return returnValue;
        }
        
        public virtual void set_RowHeight(int nRow, short param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_RowHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_RowHeight(nRow, param0);
        }
        
        public virtual void GetDefaultFont(ref string pBuf, ref short pSize) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetDefaultFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetDefaultFont(ref pBuf, ref pSize);
        }
        
        public virtual void GetHdrSelection(ref bool pTopLeftHdr, ref bool pRowHdr, ref bool pColHdr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetHdrSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetHdrSelection(ref pTopLeftHdr, ref pRowHdr, ref pColHdr);
        }
        
        public virtual void GetIteration(ref bool pIteration, ref short pMaxIterations, ref double pMaxChange) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetIteration", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetIteration(ref pIteration, ref pMaxIterations, ref pMaxChange);
        }
        
        public virtual void GetPrintScale(ref short pScale, ref bool pFitToPage, ref int pVPages, ref int pHPages) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetPrintScale", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetPrintScale(ref pScale, ref pFitToPage, ref pVPages, ref pHPages);
        }
        
        public virtual void GetSelection(short nSelection, ref int pR1, ref int pC1, ref int pR2, ref int pC2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetSelection(nSelection, ref pR1, ref pC1, ref pR2, ref pC2);
        }
        
        public virtual void GotoDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GotoDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GotoDlg();
        }
        
        public virtual void HeapMin() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HeapMin", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HeapMin();
        }
        
        public virtual void InitTable() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InitTable", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.InitTable();
        }
        
        public virtual void InsertRange(int nR1, int nC1, int nR2, int nC2, short shiftType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InsertRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.InsertRange(nR1, nC1, nR2, nC2, shiftType);
        }
        
        public virtual void LineStyleDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LineStyleDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.LineStyleDlg();
        }
        
        public virtual void MoveRange(int nR1, int nC1, int nR2, int nC2, int nRowOffset, int nColOffset) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveRange", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.MoveRange(nR1, nC1, nR2, nC2, nRowOffset, nColOffset);
        }
        
        public virtual void ObjAddItem(int iD, string pItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjAddItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjAddItem(iD, pItem);
        }
        
        public virtual void ObjAddSelection(int iD) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjAddSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjAddSelection(iD);
        }
        
        public virtual void ObjBringToFront() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjBringToFront", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjBringToFront();
        }
        
        public virtual void ObjDeleteItem(int iD, short nItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjDeleteItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjDeleteItem(iD, nItem);
        }
        
        public virtual void ObjGetCell(int iD, ref short pControlCellType, ref int pRow, ref int pCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjGetCell", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjGetCell(iD, ref pControlCellType, ref pRow, ref pCol);
        }
        
        public virtual void ObjGetPos(int iD, ref float pX1, ref float pY1, ref float pX2, ref float pY2) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjGetPos", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjGetPos(iD, ref pX1, ref pY1, ref pX2, ref pY2);
        }
        
        public virtual void ObjGetSelection(short nSelection, ref int pID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjGetSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjGetSelection(nSelection, ref pID);
        }
        
        public virtual void ObjInsertItem(int iD, short nItem, string pItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjInsertItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjInsertItem(iD, nItem, pItem);
        }
        
        public virtual void ObjNameDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjNameDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjNameDlg();
        }
        
        public virtual void ObjNew(short objType, float nX1, float nY1, float nX2, float nY2, ref int pID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjNew", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjNew(objType, nX1, nY1, nX2, nY2, ref pID);
        }
        
        public virtual void ObjNewPicture(float nX1, float nY1, float nX2, float nY2, ref int pID, int hMF, int nMapMode, int nWndExtentX, int nWndExtentY) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjNewPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjNewPicture(nX1, nY1, nX2, nY2, ref pID, hMF, nMapMode, nWndExtentX, nWndExtentY);
        }
        
        public virtual void ObjOptionsDlg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjOptionsDlg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjOptionsDlg();
        }
        
        public virtual void ObjPosToTwips(float nX1, float nY1, float nX2, float nY2, ref int pX, ref int pY, ref int pCX, ref int pCY, ref short pShown) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjPosToTwips", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjPosToTwips(nX1, nY1, nX2, nY2, ref pX, ref pY, ref pCX, ref pCY, ref pShown);
        }
        
        public virtual void ObjSendToBack() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ObjSendToBack", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ObjSendToBack();
        }
        
        public virtual string get_ColText(int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ColText(nCol)));
            return returnValue;
        }
        
        public virtual void set_ColText(int nCol, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColText(nCol, param0);
        }
        
        public virtual string get_DefinedName(string pName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DefinedName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_DefinedName(pName)));
            return returnValue;
        }
        
        public virtual void set_DefinedName(string pName, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DefinedName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DefinedName(pName, param0);
        }
        
        public virtual string get_EntryRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_EntryRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_EntryRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_EntryRC(int nRow, int nCol, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_EntryRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_EntryRC(nRow, nCol, param0);
        }
        
        public virtual string get_FormattedTextRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_FormattedTextRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_FormattedTextRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_FormattedTextRC(int nRow, int nCol, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_FormattedTextRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_FormattedTextRC(nRow, nCol, param0);
        }
        
        public virtual string get_FormulaRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_FormulaRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_FormulaRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_FormulaRC(int nRow, int nCol, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_FormulaRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_FormulaRC(nRow, nCol, param0);
        }
        
        public virtual int get_LastColForRow(int nRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LastColForRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_LastColForRow(nRow)));
            return returnValue;
        }
        
        public virtual void set_LastColForRow(int nRow, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LastColForRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LastColForRow(nRow, param0);
        }
        
        public virtual bool get_LogicalRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LogicalRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_LogicalRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_LogicalRC(int nRow, int nCol, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LogicalRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LogicalRC(nRow, nCol, param0);
        }
        
        public virtual double get_NumberRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_NumberRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            double returnValue = ((double)(this.ocx.get_NumberRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_NumberRC(int nRow, int nCol, double param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_NumberRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_NumberRC(nRow, nCol, param0);
        }
        
        public virtual string get_RowText(int nRow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_RowText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_RowText(nRow)));
            return returnValue;
        }
        
        public virtual void set_RowText(int nRow, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_RowText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_RowText(nRow, param0);
        }
        
        public virtual string get_TextRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TextRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_TextRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_TextRC(int nRow, int nCol, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TextRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TextRC(nRow, nCol, param0);
        }
        
        public virtual short get_TypeRC(int nRow, int nCol) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TypeRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.get_TypeRC(nRow, nCol)));
            return returnValue;
        }
        
        public virtual void set_TypeRC(int nRow, int nCol, short param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TypeRC", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TypeRC(nRow, nCol, param0);
        }
        
        public virtual void EditPasteValues() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditPasteValues", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.EditPasteValues();
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxF1BookEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(VCIF1Lib._DVCF1Events));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((VCIF1Lib._DVCF1)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnClickEvent(object sender, _DVCF1Events_ClickEvent e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, _DVCF1Events_DblClickEvent e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnCancelEditEvent(object sender, System.EventArgs e) {
            if ((this.CancelEditEvent != null)) {
                this.CancelEditEvent(sender, e);
            }
        }
        
        internal void RaiseOnSelChange(object sender, System.EventArgs e) {
            if ((this.SelChange != null)) {
                this.SelChange(sender, e);
            }
        }
        
        internal void RaiseOnStartEditEvent(object sender, _DVCF1Events_StartEditEvent e) {
            if ((this.StartEditEvent != null)) {
                this.StartEditEvent(sender, e);
            }
        }
        
        internal void RaiseOnEndEditEvent(object sender, _DVCF1Events_EndEditEvent e) {
            if ((this.EndEditEvent != null)) {
                this.EndEditEvent(sender, e);
            }
        }
        
        internal void RaiseOnStartRecalc(object sender, System.EventArgs e) {
            if ((this.StartRecalc != null)) {
                this.StartRecalc(sender, e);
            }
        }
        
        internal void RaiseOnEndRecalc(object sender, System.EventArgs e) {
            if ((this.EndRecalc != null)) {
                this.EndRecalc(sender, e);
            }
        }
        
        internal void RaiseOnTopLeftChanged(object sender, System.EventArgs e) {
            if ((this.TopLeftChanged != null)) {
                this.TopLeftChanged(sender, e);
            }
        }
        
        internal void RaiseOnObjClick(object sender, _DVCF1Events_ObjClickEvent e) {
            if ((this.ObjClick != null)) {
                this.ObjClick(sender, e);
            }
        }
        
        internal void RaiseOnObjDblClick(object sender, _DVCF1Events_ObjDblClickEvent e) {
            if ((this.ObjDblClick != null)) {
                this.ObjDblClick(sender, e);
            }
        }
        
        internal void RaiseOnRClick(object sender, _DVCF1Events_RClickEvent e) {
            if ((this.RClick != null)) {
                this.RClick(sender, e);
            }
        }
        
        internal void RaiseOnRDblClick(object sender, _DVCF1Events_RDblClickEvent e) {
            if ((this.RDblClick != null)) {
                this.RDblClick(sender, e);
            }
        }
        
        internal void RaiseOnObjValueChanged(object sender, _DVCF1Events_ObjValueChangedEvent e) {
            if ((this.ObjValueChanged != null)) {
                this.ObjValueChanged(sender, e);
            }
        }
        
        internal void RaiseOnModifiedEvent(object sender, System.EventArgs e) {
            if ((this.ModifiedEvent != null)) {
                this.ModifiedEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, _DVCF1Events_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, _DVCF1Events_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseMoveEvent(object sender, _DVCF1Events_MouseMoveEvent e) {
            if ((this.MouseMoveEvent != null)) {
                this.MouseMoveEvent(sender, e);
            }
        }
        
        internal void RaiseOnObjGotFocus(object sender, _DVCF1Events_ObjGotFocusEvent e) {
            if ((this.ObjGotFocus != null)) {
                this.ObjGotFocus(sender, e);
            }
        }
        
        internal void RaiseOnObjLostFocus(object sender, _DVCF1Events_ObjLostFocusEvent e) {
            if ((this.ObjLostFocus != null)) {
                this.ObjLostFocus(sender, e);
            }
        }
        
        internal void RaiseOnValidationFailed(object sender, _DVCF1Events_ValidationFailedEvent e) {
            if ((this.ValidationFailed != null)) {
                this.ValidationFailed(sender, e);
            }
        }
        
        internal void RaiseOnKeyPressEvent(object sender, _DVCF1Events_KeyPressEvent e) {
            if ((this.KeyPressEvent != null)) {
                this.KeyPressEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, _DVCF1Events_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, _DVCF1Events_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
    }
    
    public delegate void _DVCF1Events_ClickEventHandler(object sender, _DVCF1Events_ClickEvent e);
    
    public class _DVCF1Events_ClickEvent {
        
        public int nRow;
        
        public int nCol;
        
        public _DVCF1Events_ClickEvent(int nRow, int nCol) {
            this.nRow = nRow;
            this.nCol = nCol;
        }
    }
    
    public delegate void _DVCF1Events_DblClickEventHandler(object sender, _DVCF1Events_DblClickEvent e);
    
    public class _DVCF1Events_DblClickEvent {
        
        public int nRow;
        
        public int nCol;
        
        public _DVCF1Events_DblClickEvent(int nRow, int nCol) {
            this.nRow = nRow;
            this.nCol = nCol;
        }
    }
    
    public delegate void _DVCF1Events_StartEditEventHandler(object sender, _DVCF1Events_StartEditEvent e);
    
    public class _DVCF1Events_StartEditEvent {
        
        public string editString;
        
        public short cancel;
        
        public _DVCF1Events_StartEditEvent(string editString, short cancel) {
            this.editString = editString;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DVCF1Events_EndEditEventHandler(object sender, _DVCF1Events_EndEditEvent e);
    
    public class _DVCF1Events_EndEditEvent {
        
        public string editString;
        
        public short cancel;
        
        public _DVCF1Events_EndEditEvent(string editString, short cancel) {
            this.editString = editString;
            this.cancel = cancel;
        }
    }
    
    public delegate void _DVCF1Events_ObjClickEventHandler(object sender, _DVCF1Events_ObjClickEvent e);
    
    public class _DVCF1Events_ObjClickEvent {
        
        public string objName;
        
        public int objID;
        
        public _DVCF1Events_ObjClickEvent(string objName, int objID) {
            this.objName = objName;
            this.objID = objID;
        }
    }
    
    public delegate void _DVCF1Events_ObjDblClickEventHandler(object sender, _DVCF1Events_ObjDblClickEvent e);
    
    public class _DVCF1Events_ObjDblClickEvent {
        
        public string objName;
        
        public int objID;
        
        public _DVCF1Events_ObjDblClickEvent(string objName, int objID) {
            this.objName = objName;
            this.objID = objID;
        }
    }
    
    public delegate void _DVCF1Events_RClickEventHandler(object sender, _DVCF1Events_RClickEvent e);
    
    public class _DVCF1Events_RClickEvent {
        
        public int nRow;
        
        public int nCol;
        
        public _DVCF1Events_RClickEvent(int nRow, int nCol) {
            this.nRow = nRow;
            this.nCol = nCol;
        }
    }
    
    public delegate void _DVCF1Events_RDblClickEventHandler(object sender, _DVCF1Events_RDblClickEvent e);
    
    public class _DVCF1Events_RDblClickEvent {
        
        public int nRow;
        
        public int nCol;
        
        public _DVCF1Events_RDblClickEvent(int nRow, int nCol) {
            this.nRow = nRow;
            this.nCol = nCol;
        }
    }
    
    public delegate void _DVCF1Events_ObjValueChangedEventHandler(object sender, _DVCF1Events_ObjValueChangedEvent e);
    
    public class _DVCF1Events_ObjValueChangedEvent {
        
        public string objName;
        
        public int objID;
        
        public _DVCF1Events_ObjValueChangedEvent(string objName, int objID) {
            this.objName = objName;
            this.objID = objID;
        }
    }
    
    public delegate void _DVCF1Events_MouseDownEventHandler(object sender, _DVCF1Events_MouseDownEvent e);
    
    public class _DVCF1Events_MouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DVCF1Events_MouseDownEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DVCF1Events_MouseUpEventHandler(object sender, _DVCF1Events_MouseUpEvent e);
    
    public class _DVCF1Events_MouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DVCF1Events_MouseUpEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DVCF1Events_MouseMoveEventHandler(object sender, _DVCF1Events_MouseMoveEvent e);
    
    public class _DVCF1Events_MouseMoveEvent {
        
        public short button;
        
        public short shift;
        
        public int x;
        
        public int y;
        
        public _DVCF1Events_MouseMoveEvent(short button, short shift, int x, int y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void _DVCF1Events_ObjGotFocusEventHandler(object sender, _DVCF1Events_ObjGotFocusEvent e);
    
    public class _DVCF1Events_ObjGotFocusEvent {
        
        public string objName;
        
        public int objID;
        
        public _DVCF1Events_ObjGotFocusEvent(string objName, int objID) {
            this.objName = objName;
            this.objID = objID;
        }
    }
    
    public delegate void _DVCF1Events_ObjLostFocusEventHandler(object sender, _DVCF1Events_ObjLostFocusEvent e);
    
    public class _DVCF1Events_ObjLostFocusEvent {
        
        public string objName;
        
        public int objID;
        
        public _DVCF1Events_ObjLostFocusEvent(string objName, int objID) {
            this.objName = objName;
            this.objID = objID;
        }
    }
    
    public delegate void _DVCF1Events_ValidationFailedEventHandler(object sender, _DVCF1Events_ValidationFailedEvent e);
    
    public class _DVCF1Events_ValidationFailedEvent {
        
        public string pEntry;
        
        public int nSheet;
        
        public int nRow;
        
        public int nCol;
        
        public string pShowMessage;
        
        public short pAction;
        
        public _DVCF1Events_ValidationFailedEvent(string pEntry, int nSheet, int nRow, int nCol, string pShowMessage, short pAction) {
            this.pEntry = pEntry;
            this.nSheet = nSheet;
            this.nRow = nRow;
            this.nCol = nCol;
            this.pShowMessage = pShowMessage;
            this.pAction = pAction;
        }
    }
    
    public delegate void _DVCF1Events_KeyPressEventHandler(object sender, _DVCF1Events_KeyPressEvent e);
    
    public class _DVCF1Events_KeyPressEvent {
        
        public short keyAscii;
        
        public _DVCF1Events_KeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void _DVCF1Events_KeyDownEventHandler(object sender, _DVCF1Events_KeyDownEvent e);
    
    public class _DVCF1Events_KeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public _DVCF1Events_KeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void _DVCF1Events_KeyUpEventHandler(object sender, _DVCF1Events_KeyUpEvent e);
    
    public class _DVCF1Events_KeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public _DVCF1Events_KeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxF1BookEventMulticaster : VCIF1Lib._DVCF1Events {
        
        private AxF1Book parent;
        
        public AxF1BookEventMulticaster(AxF1Book parent) {
            this.parent = parent;
        }
        
        public virtual void Click(int nRow, int nCol) {
            _DVCF1Events_ClickEvent clickEvent = new _DVCF1Events_ClickEvent(nRow, nCol);
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
        
        public virtual void DblClick(int nRow, int nCol) {
            _DVCF1Events_DblClickEvent dblclickEvent = new _DVCF1Events_DblClickEvent(nRow, nCol);
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void CancelEdit() {
            System.EventArgs canceleditEvent = new System.EventArgs();
            this.parent.RaiseOnCancelEditEvent(this.parent, canceleditEvent);
        }
        
        public virtual void SelChange() {
            System.EventArgs selchangeEvent = new System.EventArgs();
            this.parent.RaiseOnSelChange(this.parent, selchangeEvent);
        }
        
        public virtual void StartEdit(ref string editString, ref short cancel) {
            _DVCF1Events_StartEditEvent starteditEvent = new _DVCF1Events_StartEditEvent(editString, cancel);
            this.parent.RaiseOnStartEditEvent(this.parent, starteditEvent);
            editString = starteditEvent.editString;
            cancel = starteditEvent.cancel;
        }
        
        public virtual void EndEdit(ref string editString, ref short cancel) {
            _DVCF1Events_EndEditEvent endeditEvent = new _DVCF1Events_EndEditEvent(editString, cancel);
            this.parent.RaiseOnEndEditEvent(this.parent, endeditEvent);
            editString = endeditEvent.editString;
            cancel = endeditEvent.cancel;
        }
        
        public virtual void StartRecalc() {
            System.EventArgs startrecalcEvent = new System.EventArgs();
            this.parent.RaiseOnStartRecalc(this.parent, startrecalcEvent);
        }
        
        public virtual void EndRecalc() {
            System.EventArgs endrecalcEvent = new System.EventArgs();
            this.parent.RaiseOnEndRecalc(this.parent, endrecalcEvent);
        }
        
        public virtual void TopLeftChanged() {
            System.EventArgs topleftchangedEvent = new System.EventArgs();
            this.parent.RaiseOnTopLeftChanged(this.parent, topleftchangedEvent);
        }
        
        public virtual void ObjClick(ref string objName, int objID) {
            _DVCF1Events_ObjClickEvent objclickEvent = new _DVCF1Events_ObjClickEvent(objName, objID);
            this.parent.RaiseOnObjClick(this.parent, objclickEvent);
            objName = objclickEvent.objName;
        }
        
        public virtual void ObjDblClick(ref string objName, int objID) {
            _DVCF1Events_ObjDblClickEvent objdblclickEvent = new _DVCF1Events_ObjDblClickEvent(objName, objID);
            this.parent.RaiseOnObjDblClick(this.parent, objdblclickEvent);
            objName = objdblclickEvent.objName;
        }
        
        public virtual void RClick(int nRow, int nCol) {
            _DVCF1Events_RClickEvent rclickEvent = new _DVCF1Events_RClickEvent(nRow, nCol);
            this.parent.RaiseOnRClick(this.parent, rclickEvent);
        }
        
        public virtual void RDblClick(int nRow, int nCol) {
            _DVCF1Events_RDblClickEvent rdblclickEvent = new _DVCF1Events_RDblClickEvent(nRow, nCol);
            this.parent.RaiseOnRDblClick(this.parent, rdblclickEvent);
        }
        
        public virtual void ObjValueChanged(ref string objName, int objID) {
            _DVCF1Events_ObjValueChangedEvent objvaluechangedEvent = new _DVCF1Events_ObjValueChangedEvent(objName, objID);
            this.parent.RaiseOnObjValueChanged(this.parent, objvaluechangedEvent);
            objName = objvaluechangedEvent.objName;
        }
        
        public virtual void Modified() {
            System.EventArgs modifiedEvent = new System.EventArgs();
            this.parent.RaiseOnModifiedEvent(this.parent, modifiedEvent);
        }
        
        public virtual void MouseDown(short button, short shift, int x, int y) {
            _DVCF1Events_MouseDownEvent mousedownEvent = new _DVCF1Events_MouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
        }
        
        public virtual void MouseUp(short button, short shift, int x, int y) {
            _DVCF1Events_MouseUpEvent mouseupEvent = new _DVCF1Events_MouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
        }
        
        public virtual void MouseMove(short button, short shift, int x, int y) {
            _DVCF1Events_MouseMoveEvent mousemoveEvent = new _DVCF1Events_MouseMoveEvent(button, shift, x, y);
            this.parent.RaiseOnMouseMoveEvent(this.parent, mousemoveEvent);
        }
        
        public virtual void ObjGotFocus(ref string objName, int objID) {
            _DVCF1Events_ObjGotFocusEvent objgotfocusEvent = new _DVCF1Events_ObjGotFocusEvent(objName, objID);
            this.parent.RaiseOnObjGotFocus(this.parent, objgotfocusEvent);
            objName = objgotfocusEvent.objName;
        }
        
        public virtual void ObjLostFocus(ref string objName, int objID) {
            _DVCF1Events_ObjLostFocusEvent objlostfocusEvent = new _DVCF1Events_ObjLostFocusEvent(objName, objID);
            this.parent.RaiseOnObjLostFocus(this.parent, objlostfocusEvent);
            objName = objlostfocusEvent.objName;
        }
        
        public virtual void ValidationFailed(ref string pEntry, int nSheet, int nRow, int nCol, ref string pShowMessage, ref short pAction) {
            _DVCF1Events_ValidationFailedEvent validationfailedEvent = new _DVCF1Events_ValidationFailedEvent(pEntry, nSheet, nRow, nCol, pShowMessage, pAction);
            this.parent.RaiseOnValidationFailed(this.parent, validationfailedEvent);
            pEntry = validationfailedEvent.pEntry;
            pShowMessage = validationfailedEvent.pShowMessage;
            pAction = validationfailedEvent.pAction;
        }
        
        public virtual void KeyPress(ref short keyAscii) {
            _DVCF1Events_KeyPressEvent keypressEvent = new _DVCF1Events_KeyPressEvent(keyAscii);
            this.parent.RaiseOnKeyPressEvent(this.parent, keypressEvent);
            keyAscii = keypressEvent.keyAscii;
        }
        
        public virtual void KeyDown(ref short keyCode, short shift) {
            _DVCF1Events_KeyDownEvent keydownEvent = new _DVCF1Events_KeyDownEvent(keyCode, shift);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
            keyCode = keydownEvent.keyCode;
        }
        
        public virtual void KeyUp(ref short keyCode, short shift) {
            _DVCF1Events_KeyUpEvent keyupEvent = new _DVCF1Events_KeyUpEvent(keyCode, shift);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
            keyCode = keyupEvent.keyCode;
        }
    }
}
