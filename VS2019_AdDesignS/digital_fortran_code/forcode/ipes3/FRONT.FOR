CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     MODULE NAME: IPES3
C
C     DESCRIPTION: THIS PROGRAM PERFORMS THE ISOTHERM PARAMETER
C         ESTIMATION (IPE) CALCULATIONS.
C
C     PLATFORM: MICROSOFT FORTRAN POWERSTATION V4.0
C
C     HISTORY:
C         1998-SEP-02 - OMAN - CONVERTED DLL FORTRAN CODE FOR USE AS
C                              AN EXE CONNECTED TO THE ADDESIGNS FRONT-END.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                              *
C234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
C-----789012345678901234567890123456789012345678901234567890123456789012CCCCCCCC-----------------

      PROGRAM IPES3
      IMPLICIT NONE
C
C------ LOCAL VARIABLES.
C
      INTEGER MODULE_CODE
      INTEGER FOUND_MODULE
C
C------ COMMON VARIABLES.
C
      INCLUDE 'COMMON.FI'
C
C------ START OF CODE.
C
C
C------ READ PATH FILE.
C
      OPEN(UNIT=11,FILE='IPES1.IN',STATUS='OLD')
      READ(11,*) MODULE_CODE
      READ(11,*) FN_IN_MAIN
      READ(11,*) FN_OUT_SUCCESSFLAG
      READ(11,*) FN_OUT_MAIN
	CLOSE(11)
C
C------ CALL SUBROUTINE FOR SPECIFIC CALCULATION MODULE.
C
      FOUND_MODULE = 0
      IF (MODULE_CODE.EQ.1) THEN
        CALL PROCESS_ADLIQ
        FOUND_MODULE = 1
      ENDIF
      IF (MODULE_CODE.EQ.4) THEN
        CALL PROCESS_SPEQ
        FOUND_MODULE = 1
      ENDIF
      IF (MODULE_CODE.EQ.5) THEN
        CALL PROCESS_HOFMAN
        FOUND_MODULE = 1
      ENDIF
      IF (FOUND_MODULE.EQ.0) THEN
        PRINT *, 'INVALID MODULE CODE (', MODULE_CODE, ').'
        CALL TERMINATE_MODEL
      ENDIF
      END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     SUBROUTINE NAME: PROCESS_ADLIQ
C
C     PURPOSE:
C         - READ INPUT DATA.
C         - CALL CALCULATION MODULE.
C         - WRITE OUTPUT DATA.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                              *
C234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
C-----789012345678901234567890123456789012345678901234567890123456789012CCCCCCCC-----------------
      SUBROUTINE PROCESS_ADLIQ
      IMPLICIT NONE
C
C------ LOCAL VARIABLES.
C
      DOUBLE PRECISION VERSION_CHECK
      DOUBLE PRECISION EOFTESTMARKER
      INTEGER I
C
C------ COMMON VARIABLES.
C
      INCLUDE 'COMMON.FI'
C
C------ PARAMETERS PASSED TO ADLIQ CALCULATION MODULE.
C
      DOUBLE PRECISION BB
      DOUBLE PRECISION W0
      DOUBLE PRECISION GM
      DOUBLE PRECISION CBULK
      DOUBLE PRECISION ORGDEN
      DOUBLE PRECISION TT
      DOUBLE PRECISION FWT
      DOUBLE PRECISION SOLUB
      INTEGER*2 NL
      DOUBLE PRECISION OMAG
      DOUBLE PRECISION CSAV
      DOUBLE PRECISION QSAV
      DOUBLE PRECISION XK1
      DOUBLE PRECISION XK2
      DOUBLE PRECISION XNF
      DOUBLE PRECISION CBEG
      DOUBLE PRECISION CEND
      DOUBLE PRECISION RSQD
      DOUBLE PRECISION RMSE
      INTEGER*2 ERRMAT(30)
      INTEGER*2 ALERR
C
C------ START OF CODE.
C
C
C------ READ MAIN INPUT FILE.
C
      OPEN(UNIT=11,FILE=FN_IN_MAIN,STATUS='OLD')
      READ(11,*) VERSION_CHECK
      IF (DABS((VERSION_CHECK+0.000001D0)/
     &    1.00D0-1.00D0).LE.0.001D0) THEN
C
C------ VERSION CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (VERSION CODE).'
        CALL TERMINATE_MODEL
      ENDIF
      READ(11,*) BB
      READ(11,*) W0
      READ(11,*) GM
      READ(11,*) CBULK
      READ(11,*) ORGDEN
      READ(11,*) TT
      READ(11,*) FWT
      READ(11,*) SOLUB
      READ(11,*) NL
      READ(11,*) OMAG
      READ(11,*) EOFTESTMARKER
      IF (DABS((EOFTESTMARKER+0.000001D0)/
     &    123456.0D0-1.0D0).LE.0.001D0) THEN
C
C------ EOF TEST MARKER CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (EOF MARKER).'
        CALL TERMINATE_MODEL
      ENDIF
      CLOSE(11)
C
C------ CALL THE CALCULATION ROUTINE.
C      
      CALL ADLIQ(BB,W0,GM,CBULK,ORGDEN,TT,FWT,SOLUB,NL,OMAG,
     &           CSAV,QSAV,XK1,XK2,XNF,CBEG,CEND,RSQD,RMSE,
     &           ERRMAT,ALERR)
C
C------ WRITE SUCCESS FLAG OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_SUCCESSFLAG)
      WRITE(12,*) 'ALERR, ERROR FLAG FOR IPE MODULE:'
      WRITE(12,*) ALERR
      CLOSE(12)
C
C------ WRITE MAIN OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_MAIN)
      WRITE(12,*) 'CSAV, average bulk concentration, ug/L'
      WRITE(12,*) CSAV
      WRITE(12,*) 'QSAV, Polanyi adsorption capacity, ug/g'
      WRITE(12,*) QSAV
      WRITE(12,*) 'XK1, Freundlich K, (ug/g)*(L/ug)^(1/n)'
      WRITE(12,*) XK1
      WRITE(12,*) 'XK2, Freundlich K, (umol/g)*(L/umol)^(1/n)'
      WRITE(12,*) XK2
      WRITE(12,*) 'XNF, Freundlich 1/n, dimless'
      WRITE(12,*) XNF
      WRITE(12,*) 'CBEG, correlation lower bound, ug/L'
      WRITE(12,*) CBEG
      WRITE(12,*) 'CEND, correlation upper bound, ug/L'
      WRITE(12,*) CEND
      WRITE(12,*) 'RSQD, regression R-squared, dimless'
      WRITE(12,*) RSQD
      WRITE(12,*) 'RMSE, root mean square error, dimless?'
      WRITE(12,*) RMSE
      WRITE(12,*) 'ERRMAT, error matrix'
      DO I=1, 30
        WRITE(12,*) ERRMAT(I)
      ENDDO
      WRITE(12,*) 'ALERR, has any error occurred (0=no)?'
      WRITE(12,*) ALERR
      WRITE(12,*) 'EOFTESTMARKER:'
      WRITE(12,*) 123456.0D0
      CLOSE(12)
      RETURN
      END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     SUBROUTINE NAME: PROCESS_SPEQ
C
C     PURPOSE:
C         - READ INPUT DATA.
C         - CALL CALCULATION MODULE.
C         - WRITE OUTPUT DATA.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                              *
C234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
C-----789012345678901234567890123456789012345678901234567890123456789012CCCCCCCC-----------------
      SUBROUTINE PROCESS_SPEQ
      IMPLICIT NONE
C
C------ LOCAL VARIABLES.
C
      DOUBLE PRECISION VERSION_CHECK
      DOUBLE PRECISION EOFTESTMARKER
      INTEGER I
C
C------ COMMON VARIABLES.
C
      INCLUDE 'COMMON.FI'
C
C------ PARAMETERS FOR SPEQ CALCULATION MODULE.
C
C...INPUTS...:
      DOUBLE PRECISION IN_DATA(10)
      INTEGER*2 NL
      INTEGER*2 XERR
C...OUTPUTS...:
      DOUBLE PRECISION CSAV
      DOUBLE PRECISION QSAV
      DOUBLE PRECISION XK1
      DOUBLE PRECISION XK2
      DOUBLE PRECISION XNF
      DOUBLE PRECISION CBEG
      DOUBLE PRECISION CEND
      INTEGER*2 ERRMAT(30)
      INTEGER*2 SQERR
C
C------ START OF CODE.
C
C
C------ READ MAIN INPUT FILE.
C
      OPEN(UNIT=11,FILE=FN_IN_MAIN,STATUS='OLD')
      READ(11,*) VERSION_CHECK
      IF (DABS((VERSION_CHECK+0.000001D0)/
     &    1.00D0-1.00D0).LE.0.001D0) THEN
C
C------ VERSION CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (VERSION CODE).'
        CALL TERMINATE_MODEL
      ENDIF
      DO I=1,10
        READ(11,*) IN_DATA(I)
      ENDDO
      READ(11,*) NL
      READ(11,*) XERR
      READ(11,*) EOFTESTMARKER
      IF (DABS((EOFTESTMARKER+0.000001D0)/
     &    123456.0D0-1.0D0).LE.0.001D0) THEN
C
C------ EOF TEST MARKER CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (EOF MARKER).'
        CALL TERMINATE_MODEL
      ENDIF
      CLOSE(11)
C
C------ CALL THE CALCULATION ROUTINE.
C      
      CALL SPEQ(IN_DATA,NL,
     &          CSAV,QSAV,XK1,XK2,XNF,CBEG,CEND,
     &          ERRMAT,XERR,SQERR)
C
C------ WRITE SUCCESS FLAG OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_SUCCESSFLAG)
      WRITE(12,*) 'SQERR, ERROR FLAG FOR IPE MODULE:'
      WRITE(12,*) SQERR
      CLOSE(12)
C
C------ WRITE MAIN OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_MAIN)
      WRITE(12,*) 'CSAV, average bulk concentration, ug/L'
      WRITE(12,*) CSAV
      WRITE(12,*) 'QSAV, Polanyi adsorption capacity, ug/g'
      WRITE(12,*) QSAV
      WRITE(12,*) 'XK1, Freundlich K, (ug/g)*(L/ug)^(1/n)'
      WRITE(12,*) XK1
      WRITE(12,*) 'XK2, Freundlich K, (umol/g)*(L/umol)^(1/n)'
      WRITE(12,*) XK2
      WRITE(12,*) 'XNF, Freundlich 1/n, dimless'
      WRITE(12,*) XNF
      WRITE(12,*) 'CBEG, correlation lower bound, ug/L'
      WRITE(12,*) CBEG
      WRITE(12,*) 'CEND, correlation upper bound, ug/L'
      WRITE(12,*) CEND
      WRITE(12,*) 'ERRMAT, error matrix'
      DO I=1, 30
        WRITE(12,*) ERRMAT(I)
      ENDDO
      WRITE(12,*) 'SQERR, has any error occurred (0=no)?'
      WRITE(12,*) SQERR
      WRITE(12,*) 'EOFTESTMARKER:'
      WRITE(12,*) 123456.0D0
      CLOSE(12)
      RETURN
      END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     SUBROUTINE NAME: PROCESS_HOFMAN
C
C     PURPOSE:
C         - READ INPUT DATA.
C         - CALL CALCULATION MODULE.
C         - WRITE OUTPUT DATA.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                              *
C234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
C-----789012345678901234567890123456789012345678901234567890123456789012CCCCCCCC-----------------
      SUBROUTINE PROCESS_HOFMAN
      IMPLICIT NONE
C
C------ LOCAL VARIABLES.
C
      DOUBLE PRECISION VERSION_CHECK
      DOUBLE PRECISION EOFTESTMARKER
      INTEGER I
C
C------ COMMON VARIABLES.
C
      INCLUDE 'COMMON.FI'
C
C------ PARAMETERS FOR HOFMAN CALCULATION MODULE.
C
C...INPUTS...:
      DOUBLE PRECISION IN_DATA(11)
      INTEGER*2 NL
C...OUTPUTS...:
      DOUBLE PRECISION CSAV
      DOUBLE PRECISION QSAV
      DOUBLE PRECISION XK1
      DOUBLE PRECISION XK2
      DOUBLE PRECISION XNF
      DOUBLE PRECISION CBEG
      DOUBLE PRECISION CEND
      DOUBLE PRECISION RSQD
      DOUBLE PRECISION RMSE
      INTEGER*2 ERRMAT(30)
      INTEGER*2 HOERR
C
C------ START OF CODE.
C
C
C------ READ MAIN INPUT FILE.
C
      OPEN(UNIT=11,FILE=FN_IN_MAIN,STATUS='OLD')
      READ(11,*) VERSION_CHECK
      IF (DABS((VERSION_CHECK+0.000001D0)/
     &    1.00D0-1.00D0).LE.0.001D0) THEN
C
C------ VERSION CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (VERSION CODE).'
        CALL TERMINATE_MODEL
      ENDIF
      DO I=1,11
        READ(11,*) IN_DATA(I)
      ENDDO
      READ(11,*) NL
      READ(11,*) EOFTESTMARKER
      IF (DABS((EOFTESTMARKER+0.000001D0)/
     &    123456.0D0-1.0D0).LE.0.001D0) THEN
C
C------ EOF TEST MARKER CHECK SUCCESSFUL; DO NOTHING.
C      
      ELSE
        PRINT *, 'INVALID INPUT FILE FORMAT (EOF MARKER).'
        CALL TERMINATE_MODEL
      ENDIF
      CLOSE(11)
C
C------ CALL THE CALCULATION ROUTINE.
C      
      CALL HOFMAN(IN_DATA,NL,CSAV,QSAV,
     &            XK1,XK2,XNF,CBEG,CEND,RSQD,RMSE,
     &            ERRMAT,HOERR)
C
C------ WRITE SUCCESS FLAG OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_SUCCESSFLAG)
      WRITE(12,*) 'HOERR, ERROR FLAG FOR IPE MODULE:'
      WRITE(12,*) HOERR
      CLOSE(12)
C
C------ WRITE MAIN OUTPUT FILE.
C
      OPEN(UNIT=12,FILE=FN_OUT_MAIN)
      WRITE(12,*) 'CSAV, average bulk concentration, ug/L'
      WRITE(12,*) CSAV
      WRITE(12,*) 'QSAV, Polanyi adsorption capacity, ug/g'
      WRITE(12,*) QSAV
      WRITE(12,*) 'XK1, Freundlich K, (ug/g)*(L/ug)^(1/n)'
      WRITE(12,*) XK1
      WRITE(12,*) 'XK2, Freundlich K, (umol/g)*(L/umol)^(1/n)'
      WRITE(12,*) XK2
      WRITE(12,*) 'XNF, Freundlich 1/n, dimless'
      WRITE(12,*) XNF
      WRITE(12,*) 'CBEG, correlation lower bound, ug/L'
      WRITE(12,*) CBEG
      WRITE(12,*) 'CEND, correlation upper bound, ug/L'
      WRITE(12,*) CEND
      WRITE(12,*) 'RSQD, regression R-squared, dimless'
      WRITE(12,*) RSQD
      WRITE(12,*) 'RMSE, root mean square error, dimless?'
      WRITE(12,*) RMSE
      WRITE(12,*) 'ERRMAT, error matrix'
      DO I=1, 30
        WRITE(12,*) ERRMAT(I)
      ENDDO
      WRITE(12,*) 'HOERR, has any error occurred (0=no)?'
      WRITE(12,*) HOERR
      WRITE(12,*) 'EOFTESTMARKER:'
      WRITE(12,*) 123456.0D0
      CLOSE(12)
      RETURN
      END



      SUBROUTINE TERMINATE_MODEL
      IMPLICIT NONE
CC------ COMMON VARIABLES.
C      INCLUDE 'COMMON.FI'
      PAUSE 'Press Enter to terminate model.'
      STOP
      RETURN
	END

